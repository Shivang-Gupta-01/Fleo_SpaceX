{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shivang\\\\Desktop\\\\spacex\\\\src\\\\App.js\";\nimport React, { Component, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Card, Button, Row, Col } from 'react-bootstrap';\nimport { IoIosArrowDropdown } from \"react-icons/io\";\nimport { toggle } from 'react-useanimations/lib/checkBox';\nimport RocketLaunchDetails from './components/RocketLaunchDetails';\nimport querystring from 'querystring';\nimport './App.css';\nimport loader from './rocket.gif';\nconst API_BASE_URL = \"https://api.spacexdata.com/v3/launches?limit=100\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = (isOpen, openParam) => {\n      if (openParam === \"year\") {\n        this.setState({\n          isYearOpen: !isOpen\n        }, () => {\n          console.log(this.state);\n        });\n      } else if (openParam === \"launch\") {\n        this.setState({\n          isLaunchOpen: !isOpen\n        }, () => {\n          console.log(this.state);\n        });\n      } else if (openParam === \"land\") {\n        this.setState({\n          isLandOpen: !isOpen\n        }, () => {\n          console.log(this.state);\n        });\n      }\n    };\n\n    this.state = {\n      items: [],\n      isLoaded: false,\n      isLaunchOpen: false,\n      isYearOpen: false,\n      isLandOpen: false,\n      filters: {\n        limit: 150,\n        launch_year: undefined,\n        launch_success: undefined,\n        land_success: undefined\n      }\n    };\n  }\n\n  getUpdatedApiUrl(filters = {}) {\n    return API_BASE_URL + querystring.stringify({ ...filters\n    });\n  }\n\n  fetchAPI(filters) {\n    const URL = this.getUpdatedApiUrl(filters);\n    this.setState({\n      isLoaded: false,\n      filters\n    });\n    fetch(URL).then(response => response.json()).then(data => {\n      this.setState({\n        isLoaded: true,\n        data\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchAPI(this.state.filters);\n  }\n\n  updateApiFilters(type, value) {\n    if (this.state.filters[type] === value) {\n      value = undefined;\n    }\n\n    const filters = { ...this.state.filters,\n      [type]: value\n    };\n    this.fetchAPI(filters);\n  }\n\n  render() {\n    const {\n      isLoaded,\n      data\n    } = this.state;\n    const uniqueLaunchYears = new Array(16).fill(0).map((_, index) => 2006 + index);\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-loader-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-loader-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: loader,\n        alt: \"loading...\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"App-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, \"SpaceX\"), /*#__PURE__*/React.createElement(Container, {\n        fluid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        lg: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"App-filter-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"App-filter-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, \"Filters\"), /*#__PURE__*/React.createElement(Card.Text, {\n        className: \"App-filter-heading-launch-year\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, \"Launch Year\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"year\",\n        onClick: () => {\n          this.toggle(this.state.isYearOpen, \"year\");\n        },\n        style: {\n          marginBottom: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"checkBox\", {\n        animationKey: \"checkbox\",\n        size: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(\"hr\", {\n        className: \"App-filters-hr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 23\n        }\n      })), this.state.isYearOpen ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-filter-button-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }\n      }, uniqueLaunchYears.map(year => {\n        return /*#__PURE__*/React.createElement(Button, {\n          className: \"App-filter-button\",\n          variant: this.state.filters.launch_year === year.toString() ? \"success\" : \"outline-success\",\n          value: year,\n          onClick: e => this.updateApiFilters(\"launch_year\", e.target.value),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 29\n          }\n        }, year);\n      }))) : null, /*#__PURE__*/React.createElement(Card.Text, {\n        className: \"App-filter-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }, \"Launch  \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 32\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Button, {\n        className: \"Launchbtn\",\n        color: \"primary\",\n        onClick: () => {\n          this.toggle(this.state.isLaunchOpen, \"launch\");\n        },\n        style: {\n          marginBottom: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 39\n        }\n      }, \"Toggle\")), /*#__PURE__*/React.createElement(\"hr\", {\n        className: \"App-filters-hr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 23\n        }\n      })), this.state.isLaunchOpen ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-filter-button-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"App-filter-button\",\n        variant: this.state.filters.launch_success === \"true\" ? \"success\" : \"outline-success\",\n        onClick: e => this.updateApiFilters(\"launch_success\", e.target.value),\n        value: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 23\n        }\n      }, \"Success\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"App-filter-button\",\n        variant: this.state.filters.launch_success === \"false\" ? \"success\" : \"outline-success\",\n        onClick: e => this.updateApiFilters(\"launch_success\", e.target.value),\n        value: \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 23\n        }\n      }, \"Failure\")) : null, /*#__PURE__*/React.createElement(Card.Text, {\n        className: \"App-filter-heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }\n      }, \"Landing\", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 31\n        }\n      }, \" \", /*#__PURE__*/React.createElement(Button, {\n        className: \"Yearbtn\",\n        color: \"primary\",\n        onClick: () => {\n          this.toggle(this.state.isLandOpen, \"land\");\n        },\n        style: {\n          marginBottom: '1rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 38\n        }\n      }, \"Toggle\")), /*#__PURE__*/React.createElement(\"hr\", {\n        className: \"App-filters-hr\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 23\n        }\n      })), this.state.isLandOpen ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App-filter-button-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"App-filter-button\",\n        variant: this.state.filters.land_success === \"true\" ? \"success\" : \"outline-success\",\n        onClick: e => this.updateApiFilters(\"land_success\", e.target.value),\n        value: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 23\n        }\n      }, \"Success\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"App-filter-button\",\n        variant: this.state.filters.land_success === \"false\" ? \"success\" : \"outline-success\",\n        onClick: e => this.updateApiFilters(\"land_success\", e.target.value),\n        value: \"false\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 23\n        }\n      }, \"Failure\")) : null))), /*#__PURE__*/React.createElement(Col, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        lg: 9,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }\n      }, data.map(details => {\n        return /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          lg: 4,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(RocketLaunchDetails, {\n          details: details,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }\n        }));\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"App-Developers-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }\n      }, \"Shivang Gupta\"))));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/shivang/Desktop/spacex/src/App.js"],"names":["React","Component","useState","Container","Card","Button","Row","Col","IoIosArrowDropdown","toggle","RocketLaunchDetails","querystring","loader","API_BASE_URL","App","constructor","props","isOpen","openParam","setState","isYearOpen","console","log","state","isLaunchOpen","isLandOpen","items","isLoaded","filters","limit","launch_year","undefined","launch_success","land_success","getUpdatedApiUrl","stringify","fetchAPI","URL","fetch","then","response","json","data","componentDidMount","updateApiFilters","type","value","render","uniqueLaunchYears","Array","fill","map","_","index","marginBottom","year","toString","e","target","details"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Card, Button, Row, Col} from 'react-bootstrap';\r\nimport {IoIosArrowDropdown } from \"react-icons/io\";\r\nimport {toggle} from 'react-useanimations/lib/checkBox'\r\nimport RocketLaunchDetails from './components/RocketLaunchDetails';\r\nimport querystring from 'querystring';\r\nimport './App.css';\r\nimport loader from './rocket.gif';\r\nconst API_BASE_URL = \"https://api.spacexdata.com/v3/launches?limit=100\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      isLaunchOpen :false,\r\n      isYearOpen: false,\r\n      isLandOpen: false,\r\n\r\n      filters: {\r\n        limit: 150,\r\n        launch_year: undefined,\r\n        launch_success: undefined,\r\n        land_success: undefined,\r\n      },\r\n    }\r\n  }\r\n toggle = (isOpen,openParam) => {\r\n\r\n  if ((openParam===\"year\"))\r\n   {this.setState({\r\n    isYearOpen: !isOpen\r\n   },()=>{\r\n     console.log(this.state);\r\n   })}\r\n   else if(openParam===\"launch\")\r\n   {\r\n    this.setState({\r\n      isLaunchOpen: !isOpen\r\n     },()=>{\r\n       console.log(this.state);\r\n     })\r\n   }\r\n   else if(openParam===\"land\")\r\n   {\r\n    this.setState({\r\n      isLandOpen: !isOpen\r\n     },()=>{\r\n       console.log(this.state);\r\n     })\r\n   }\r\n   \r\n }\r\n\r\n  getUpdatedApiUrl(filters = {}) {\r\n    return API_BASE_URL + querystring.stringify({ ...filters });\r\n  }\r\n\r\n  fetchAPI(filters) {\r\n    const URL = this.getUpdatedApiUrl(filters);\r\n    this.setState({ isLoaded: false, filters });\r\n    fetch(URL)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          data\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAPI(this.state.filters);\r\n  }\r\n\r\n  updateApiFilters(type, value) {\r\n    \r\n    if (this.state.filters[type] === value) {\r\n      value = undefined;\r\n    }\r\n\r\n    const filters = {\r\n      ...this.state.filters,\r\n      [type]: value,\r\n    };\r\n\r\n    this.fetchAPI(filters);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { isLoaded, data } = this.state;\r\n    const uniqueLaunchYears = new Array(16).fill(0).map((_, index) => 2006 + index);\r\n    if (!isLoaded) {\r\n      return <div className=\"App-loader-container\">\r\n        <div className=\"App-loader-box\">\r\n          <img src={loader} alt=\"loading...\" />\r\n        </div>\r\n      </div>\r\n    }\r\n\r\n    else {\r\n\r\n      return (\r\n        <div className=\"App\">\r\n          <h1 className=\"App-header\">SpaceX</h1>\r\n          <Container fluid>\r\n            <Row>\r\n              <Col xs={12} sm={12} md={6} lg={3}>\r\n                <Card className=\"App-filter-card\">\r\n                  <Card.Body>\r\n                    <Card.Title className=\"App-filter-header\">\r\n                      Filters\r\n                    </Card.Title>\r\n                    <Card.Text className=\"App-filter-heading-launch-year\">\r\n                      Launch Year\r\n                      <span className=\"year\" onClick={() => {this.toggle(this.state.isYearOpen,\"year\")}} style={{ marginBottom: '1rem' }}>\r\n                      <checkBox\r\n        animationKey=\"checkbox\"\r\n        size={12}\r\n      /></span>\r\n                      <hr className=\"App-filters-hr\" />\r\n                    </Card.Text>\r\n                    {\r\n                    this.state.isYearOpen ? <Row>\r\n                      <div className=\"App-filter-button-container\">\r\n                        {\r\n                        uniqueLaunchYears.map((year) => {\r\n                          return (\r\n                            <Button\r\n                              className=\"App-filter-button\"\r\n                              variant={\r\n                                this.state.filters.launch_year ===\r\n                                year.toString()\r\n                                  ? \"success\"\r\n                                  : \"outline-success\"\r\n                              }\r\n                              value={year}\r\n                              onClick={(e) =>\r\n                                this.updateApiFilters(\r\n                                  \"launch_year\",\r\n                                  e.target.value\r\n                                )\r\n                              }\r\n                            >\r\n                              {year}\r\n                            </Button>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </Row> :\r\n                    null }\r\n                   \r\n\r\n                    <Card.Text className=\"App-filter-heading\">\r\n                       Launch  <span> <Button className=\"Launchbtn\" color=\"primary\"  onClick={() => {this.toggle(this.state.isLaunchOpen,\"launch\")}} style={{ marginBottom: '1rem' }}>Toggle</Button></span>\r\n                      <hr className=\"App-filters-hr\" />\r\n                    </Card.Text>\r\n                    {this.state.isLaunchOpen ?\r\n                    <div className=\"App-filter-button-container\">\r\n                      <Button\r\n                        className=\"App-filter-button\"\r\n                        variant={\r\n                          this.state.filters.launch_success === \"true\"\r\n                            ? \"success\"\r\n                            : \"outline-success\"\r\n                        }\r\n                        onClick={(e) =>\r\n                          this.updateApiFilters(\r\n                            \"launch_success\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        value=\"true\"\r\n                      >\r\n                        Success\r\n                      </Button>\r\n\r\n                      <Button\r\n                        className=\"App-filter-button\"\r\n                        variant={\r\n                          this.state.filters.launch_success === \"false\"\r\n                            ? \"success\"\r\n                            : \"outline-success\"\r\n                        }\r\n                        onClick={(e) =>\r\n                          this.updateApiFilters(\r\n                            \"launch_success\",\r\n                            e.target.value\r\n                          )\r\n                        }\r\n                        value=\"false\"\r\n                      >\r\n                        Failure\r\n                      </Button>\r\n                    </div>\r\n                    : null}\r\n\r\n\r\n                    <Card.Text className=\"App-filter-heading\">\r\n                       Landing<span> <Button className=\"Yearbtn\" color=\"primary\"  onClick={() => {this.toggle(this.state.isLandOpen,\"land\")}} style={{ marginBottom: '1rem' }}>Toggle</Button></span>\r\n                      <hr className=\"App-filters-hr\" />\r\n                    </Card.Text>\r\n                        \r\n                    {this.state.isLandOpen ?\r\n                    <div className=\"App-filter-button-container\">\r\n                      <Button\r\n                        className=\"App-filter-button\"\r\n                        variant={\r\n                          this.state.filters.land_success === \"true\"\r\n                            ? \"success\"\r\n                            : \"outline-success\"\r\n                        }\r\n                        onClick={(e) =>\r\n                          this.updateApiFilters(\"land_success\", e.target.value)\r\n                        }\r\n                        value=\"true\"\r\n                      >\r\n                       Success\r\n                      </Button>\r\n\r\n                      <Button\r\n                        className=\"App-filter-button\"\r\n                        variant={\r\n                          this.state.filters.land_success === \"false\"\r\n                            ? \"success\"\r\n                            : \"outline-success\"\r\n                        }\r\n                        onClick={(e) =>\r\n                          this.updateApiFilters(\"land_success\", e.target.value)\r\n                        }\r\n                        value=\"false\"\r\n                      >\r\n                        Failure\r\n                      </Button>\r\n                    </div>\r\n                  :null}\r\n                  </Card.Body>\r\n                </Card>\r\n\r\n              </Col>\r\n\r\n              <Col xs={12} sm={12} md={6} lg={9}>\r\n                <Row>\r\n                  {data.map((details) => {\r\n                    return (\r\n                      <Col md={12} lg={4}>\r\n                        <RocketLaunchDetails details={details} />\r\n                      </Col>\r\n                    );\r\n                  })}\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n            <div>\r\n              <h5 className=\"App-Developers-name\">\r\n               Shivang Gupta\r\n              </h5>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n      );\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}